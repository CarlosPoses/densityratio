// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// distance
arma::mat distance(arma::mat X, arma::mat Y, bool symmetric);
RcppExport SEXP _densityratio_distance(SEXP XSEXP, SEXP YSEXP, SEXP symmetricSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< bool >::type symmetric(symmetricSEXP);
    rcpp_result_gen = Rcpp::wrap(distance(X, Y, symmetric));
    return rcpp_result_gen;
END_RCPP
}
// householder_QR
List householder_QR(arma::mat X);
RcppExport SEXP _densityratio_householder_QR(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(householder_QR(X));
    return rcpp_result_gen;
END_RCPP
}
// compute_ulsif
arma::mat compute_ulsif(arma::mat& Hhat, arma::vec& hhat, arma::vec& lambda, bool parallel, int nthreads);
RcppExport SEXP _densityratio_compute_ulsif(SEXP HhatSEXP, SEXP hhatSEXP, SEXP lambdaSEXP, SEXP parallelSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Hhat(HhatSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type hhat(hhatSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_ulsif(Hhat, hhat, lambda, parallel, nthreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_densityratio_distance", (DL_FUNC) &_densityratio_distance, 3},
    {"_densityratio_householder_QR", (DL_FUNC) &_densityratio_householder_QR, 1},
    {"_densityratio_compute_ulsif", (DL_FUNC) &_densityratio_compute_ulsif, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_densityratio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
